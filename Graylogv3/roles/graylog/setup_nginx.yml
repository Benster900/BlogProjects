####################################################################
# Install/Setup Nginx
####################################################################
- name: Install/Setup Nginx
  package:
    name: '{{ item }}'
    state: latest
  with_items:
    - nginx

- name: Backup nginx conf
  copy:
    src: '/etc/nginx/nginx.conf'
    dest: '/etc/nginx/nginx.conf.bak'
    remote_src: true
    owner: 'root'
    group: 'root'
    mode: '0400'

- name: Create NGINX SSL dir
  file:
    path: '/etc/nginx/ssl'
    owner: root
    group: root
    state: directory
    mode: 0400

- name: Copy nginx.conf
  template:
    src: 'conf/nginx/nginx.conf'
    dest: '/etc/nginx/nginx.conf'
    owner: root
    group: root
    mode: 0400

- name: Copy graylog.conf
  template:
    src: 'conf/nginx/graylog.conf'
    dest: '/etc/nginx/conf.d/graylog.conf'
    owner: root
    group: root
    mode: 0400

- name: Generate DHParam
  openssl_dhparam:
    path: /etc/nginx/ssl/dhparam.pem
    size: 4096

- name: "generate ssl private key file"
  become: true
  openssl_privatekey:
    path: "/etc/nginx/ssl/{{ graylog_hostname }}.{{ base_domain }}.key"

- name: "generate ssl certificate request file"
  openssl_csr:
    path: "/etc/nginx/ssl/{{ graylog_hostname }}.{{ base_domain }}.csr"
    privatekey_path: "/etc/nginx/ssl/{{ graylog_hostname }}.{{ base_domain }}.key"
    subject_alt_name: "DNS:localhost"
    C: "{{ cert_country }}"
    ST: "{{ cert_state }}"
    L: "{{ cert_local }}"
    O: "{{ cert_org }}"
    OU: "{{ cert_ou }}"
    CN: "{{ graylog_hostname }}.{{ base_domain }}"

- name: "generate ssl certificate"
  become: true
  openssl_certificate:
    path: "/etc/nginx/ssl/{{ graylog_hostname }}.{{ base_domain }}.crt"
    privatekey_path: "/etc/nginx/ssl/{{ graylog_hostname }}.{{ base_domain }}.key"
    csr_path: "/etc/nginx/ssl/{{ graylog_hostname }}.{{ base_domain }}.csr"
    provider: selfsigned

- name: Restart nginx to activate letsencrypt site
  service:
    name: nginx
    state: restarted
    enabled: true
