##############################################################
# Install Boundary
##############################################################
- name: Add Boundary GPG key
  ansible.builtin.apt_key:
    url: '{{ boundary_gpg_key }}'
    state: present

- name: Add Boundary repo
  ansible.builtin.apt_repository:
    repo: '{{ boundary_repo }}'
    state: present

- name: Install Boundary {{ boundary_version }}
  apt:
    name: ['boundary={{ boundary_version }}']
    state: present

- name: Allow Boundary binary to enable memlock
  community.general.capabilities:
    path: /usr/bin/boundary
    capability: cap_ipc_lock=+ep
    state: present

- name: Create Boundary group
  ansible.builtin.group:
    name: '{{ boundary_group }}'
    state: present

- name: Create Boundary user
  user:
    name: '{{ boundary_user }}'
    group: '{{ boundary_group }}'
    system: true

- name: Create Boundary directory
  file:
    path: '{{ item }}'
    state: directory
    owner: '{{ boundary_user }}'
    group: '{{ boundary_group }}'
  with_items:
    - '/etc/boundary'
    - '/etc/boundary/ssl'

- name: Copy Boundary controller service config
  template:
    src: 'conf/ansible/boundary_controller/boundary-controller.service'
    dest: '/etc/systemd/system/boundary-controller.service'
    owner: 'root'
    group: 'root'
    mode: 0644

- name: Copy Boundary worker service config
  template:
    src: 'conf/ansible/boundary_worker/boundary-worker.service'
    dest: '/etc/systemd/system/boundary-worker.service'
    owner: 'root'
    group: 'root'
    mode: 0644

##############################################################
# Setup Boundary
##############################################################
- name: CURL Vault Root CA
  get_url:
    url: '{{ vault_addr }}/v1/pki/ca/pem'
    validate_certs: false
    dest: "/etc/ssl/certs/{{ base_domain | replace('.','-') }}-root-ca.crt"
    owner: 'root'
    group: 'root'
    mode: '0444'

- name: Copy Boundary intermediate certificate
  copy:
    src: 'conf/tls/boundary_hackinglab_local_pki_int.crt'
    dest: "/etc/boundary/ssl/boundary-{{ base_domain | replace('.','-') }}-pki-int.crt"
    owner: 'root'
    group: 'root'
    mode: '0444'

- name: Copy Boundary controller public cert and private key
  copy:
    src: "{{ item }}"
    dest: "/etc/boundary/ssl/{{ item | basename | replace('_','-') }}"
    owner: 'root'
    group: 'boundary'
    mode: '0640'
  with_fileglob:
    - "conf/tls/controller*_boundary_*.crt"
    - "conf/tls/controller*_boundary_*.key"

- name: Copy Boundary worker public cert and private key
  copy:
    src: "{{ item }}"
    dest: "/etc/boundary/ssl/{{ item | basename | replace('_','-') }}"
    owner: 'root'
    group: 'boundary'
    mode: '0640'
  with_fileglob:
    - "conf/tls/worker*_boundary_*.crt"
    - "conf/tls/worker*_boundary_*.key"

# Gather IP facts from your own ipify service endpoint with a custom timeout
- name: Get my public IP
  community.general.ipify_facts:
    api_url: 'https://api.ipify.org/'
    timeout: 20

- name: Copy Boundary controller config
  template:
    src: 'conf/ansible/boundary_controller/boundary-controller.hcl'
    dest: '/etc/boundary/boundary-controller.hcl'
    owner: 'root'
    group: 'boundary'
    mode: 0640

- name: Copy Boundary worker config
  template:
    src: 'conf/ansible/boundary_worker/boundary-worker.hcl'
    dest: '/etc/boundary/boundary-worker.hcl'
    owner: 'root'
    group: 'boundary'
    mode: 0640

##############################################################
# Init Boundary
##############################################################
- name: Check if Boundary init text file exist
  ansible.builtin.stat:
    path: /tmp/boundary-init.txt
  register: boundary_init

- name: Init Boundary
  shell: '/usr/bin/boundary database init -config /etc/boundary/boundary-controller.hcl > /tmp/boundary-init.txt'
  when: not boundary_init.stat.exists

##############################################################
# Start Boundary
##############################################################
- name: Start Boundary controller
  service:
    name: 'boundary-controller'
    state: restarted
    enabled: true

- name: Wait for Boundary controller to start
  wait_for:
    port: 9200
    delay: 10

- name: Start Boundary worker
  service:
    name: 'boundary-worker'
    state: restarted
    enabled: true

- name: Wait for Boundary worker to start
  wait_for:
    port: 9202
    delay: 10
