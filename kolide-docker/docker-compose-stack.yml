version: '3.3'
services:
  redis:
    image: redis:4.0
    container_name: kolide-redis
    networks:
      - kolide-backend
    volumes:
      - kolide-redis:/data
  mysql:
    image: mysql:5.7
    container_name: kolide-mysql
    environment:
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_DATABASE: kolide
      MYSQL_USER: kolide
      MYSQL_PASSWORD: kolide
    networks:
      - kolide-backend
    volumes:
      - kolide-mysql:/var/lib/mysql
  kolide:
    image: kolide
    container_name: kolide-app
    networks:
      - kolide-backend
    volumes:
      - kolide-osquery-logs:/var/log/kolide
    configs:
      - source: kolide-config
        target: /etc/kolide/kolide.yml
    depends_on:
      - redis
      - mysql
  nginx:
    image: nginx:1.16.0
    container_name: kolide-nginx
    networks:
      - default
      - kolide-backend
    ports:
      - 80:80
      - 443:443
    volumes:
      - kolide-nginx-logs:/var/log/nginx
    configs:
      - source: nginx-ssl-cert
        target: /etc/nginx/ssl/kolide.crt
      - source: nginx-ssl-key
        target: /etc/nginx/ssl/kolide.key
      - source: nginx-kolide-config
        target: /etc/nginx/conf.d/default.conf
    depends_on:
      - kolide

configs:
  kolide-config:
    file: ./conf/kolide/kolide.yml
  nginx-kolide-config:
    file: ./conf/nginx/kolide.conf
  nginx-ssl-cert:
    file: ./conf/nginx/certs/kolide.crt
  nginx-ssl-key:
     file: ./conf/nginx/certs/kolide.key


volumes:
  kolide-redis:
  kolide-mysql:
  kolide-osquery-logs:
  kolide-nginx-logs:

networks:
  kolide-backend:
