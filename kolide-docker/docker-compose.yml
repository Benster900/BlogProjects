version: '2.2'
services:
  redis:
    image: redis:4.0
    container_name: kolide-redis
    restart: unless-stopped
    networks: 
      - kolide-backend
    volumes:
      - kolide-redis:/data
  mysql:
    image: mysql:5.7
    container_name: kolide-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_DATABASE: kolide
      MYSQL_USER: kolide
      MYSQL_PASSWORD: kolide
    networks: 
      - kolide-backend
    volumes:
      - kolide-mysql:/var/lib/mysql
  kolide:
    build:
      context: .
      dockerfile: Dockerfile-kolide
    container_name: kolide-app
    restart: unless-stopped
    networks: 
      - kolide-backend
    volumes:
      - kolide-osquery-logs:/var/log/kolide
      - ./conf/kolide/kolide.yml:/etc/kolide/kolide.yml
    depends_on:
      - redis
      - mysql
  nginx:
    image: nginx:1.16.0
    container_name: kolide-nginx
    restart: unless-stopped
    networks: 
      - default
      - kolide-backend
    ports:
      - 80:80
      - 443:443
    volumes:
      - kolide-nginx-logs:/var/log/nginx
      - ./conf/nginx/certs:/etc/nginx/ssl:ro
      - ./conf/nginx/kolide.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - kolide

volumes:
  kolide-redis:
  kolide-mysql:
  kolide-osquery-logs:
  kolide-nginx-logs:

networks:
  kolide-backend: