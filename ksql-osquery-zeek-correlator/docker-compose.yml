version: '2.2'
services:
  ############################################ Splunk server ############################################
  # splunk:
  #   container_name: splunk
  #   image: splunk/splunk:7.3.2
  #   restart: unless-stopped
  #   environment:
  #     - 'SPLUNK_START_ARGS=--accept-license'
  #     - 'SPLUNK_PASSWORD=changeme'
  #   ports:
  #     - 8000:8000
  #   networks:
  #     - default
  #     - logging-backend
  #   volumes:
  #     - splunk-etc:/opt/splunk/etc
  #     - splunk-var:/opt/splunk/var
  #   depends_on:
  #     - rsyslog
  #   cpus: 2
  #   mem_limit: 1G

  ############################################ Rsyslog server ############################################
  rsyslog:
    container_name: rsyslog
    build:
      context: .
      dockerfile: docker/Dockerfile-rsyslog-server
    restart: unless-stopped
    ports:
      - 1514:1514/udp
    networks:
      - default
      - logging-backend
      - kafka-backend
    depends_on:
      - kafka
    cpus: 2
    mem_limit: 150M

  ############################################ Logstash server ############################################
  logstash:
    container_name: logstash
    build:
      context: .
      dockerfile: docker/Dockerfile-logstash
    restart: unless-stopped
    ports:
      - 5044:5044
    networks:
      - default
      - logging-backend
      - kafka-backend
    depends_on:
      - kafka
      - rsyslog
    cpus: 2
    mem_limit: 500M

  ############################################ Zookeeper ############################################
  zookeeper:
    #container_name: zookeeper
    image: "confluentinc/cp-zookeeper:5.3.0"
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-backend
    cpus: 1
    mem_limit: 150M

  ############################################ Kafka server ############################################
  kafka:
    #container_name: kafka
    image: "confluentinc/cp-enterprise-kafka:5.3.0"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:39092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:32181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    networks:
      - logging-backend
      - kafka-backend
    depends_on:
      - zookeeper
    cpus: 2
    mem_limit: 1G

  ############################################ Schema registry ############################################
  schema-registry:
    #container_name: schema-registry
    image: "confluentinc/cp-schema-registry:5.3.0"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:32181
    networks:
      - kafka-backend
    depends_on:
      - zookeeper
      - kafka
    cpus: 1
    mem_limit: 300M

  ############################################ KSQL server ############################################
  ksql-server:
    #container_name: ksql-server
    image: "confluentinc/cp-ksql-server:5.3.0"
    networks:
      - kafka-backend
    environment:
      KSQL_BOOTSTRAP_SERVERS: kafka:39092
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    depends_on:
      - kafka
      - schema-registry
    cpus: 2
    mem_limit: 500M

  ############################################ KSQL client ############################################
  ksql-cli:
    #container_name: ksql-cli
    image: confluentinc/cp-ksql-cli:5.1.3
    environment:
      KSQL_HEAP_OPTS: -Xmx500m
    entrypoint: /bin/sh
    tty: true
    networks:
      - kafka-backend
    depends_on:
      - ksql-server
    cpus: 1
    mem_limit: 500M

networks:
  kafka-backend:
  logging-backend:

# volumes:
#   splunk-var:
#   splunk-etc:
