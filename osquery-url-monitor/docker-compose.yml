version: '2.2'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile-python-client
    container_name: app
    restart: unless-stopped
    networks:
      - kafka-backend
    depends_on:
      - kafka
      - splunk-siem
    cpus: 1
    mem_limit: 50MB
  splunk-siem:
    image: splunk/splunk:7.3.2
    container_name: 'splunk-siem'
    restart: unless-stopped
    networks:
      - logging-backend
    environment:
      - 'SPLUNK_START_ARGS=--accept-license'
      - 'SPLUNK_PASSWORD=changeme'
    ports:
      - 8000:8000
    depends_on:
      - rsyslog
    cpus: 2
    mem_limit: 1G
  rsyslog:
    container_name: 'rsyslog'
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile-rsyslog
    ports:
      - 1514:1514/udp
    networks:
      - default
      - kafka-backend
      - logging-backend
    depends_on:
      - kafka
    cpus: 1
    mem_limit: 150M
  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.1
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-backend
    cpus: 1
    mem_limit: 150M
  kafka:
    image: confluentinc/cp-kafka:5.3.1
    container_name: kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      #KAFKA_ADVERTISED_LISTENERS: INTERNAL_DOCKER_NETWORK://kafka:29092,EXTERNAL_NETWORK://kafka.hackinglab.local:9092
      #KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL_DOCKER_NETWORK:PLAINTEXT,EXTERNAL_NETWORK:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL_DOCKER_NETWORK://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL_DOCKER_NETWORK:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL_DOCKER_NETWORK
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - default
      - kafka-backend
    #ports:
    #  - 9092:9092
    depends_on:
      - zookeeper
    cpus: 2
    mem_limit: 1G


networks:
  kafka-backend:
  logging-backend:
