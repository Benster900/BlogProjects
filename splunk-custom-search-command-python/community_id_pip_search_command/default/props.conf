[bro:json]
SHOULD_LINEMERGE = false
TRUNCATE = 0
TIME_PREFIX = \"ts\"\:
TIME_FORMAT = %s.%6N
TRANSFORMS-BroAutoTypeForJson = BroAutoTypeJSON

# This stanza is executing after of all source type based stanza and tsv/json (bro(_|:)*) define pattern stanza.
# Stanza execution priority:
# 1) sourcetype based stanza ( bro_* or bro:*:json)
# 2) both data formate regex stanza [(?::){0}bro(_|:)*])
# 3) json sourcetype stanza ([(?::){0}bro:*:json])
[(?::){0}bro:*:json]
KV_MODE = JSON
SHOULD_LINEMERGE = false
TRUNCATE = 0
EVENT_BREAKER_ENABLE = true
MAX_TIMESTAMP_LOOKAHEAD = 20
TIME_FORMAT = %s.%6N

###############
# CIM TAGGING #
###############
FIELDALIAS-dest0 = id.resp_h AS dest
FIELDALIAS-dest_ip0 = id.resp_h AS dest_ip
FIELDALIAS-src0 = id.orig_h AS src
FIELDALIAS-src_ip0 = id.orig_h AS src_ip
FIELDALIAS-src_port0 = id.orig_p AS src_port

[source::...bro.*.log]
SHOULD_LINEMERGE = false
TRUNCATE = 0
MAX_TIMESTAMP_LOOKAHEAD = 20
TIME_FORMAT = %s.%6N
TRANSFORMS-BroAutoType = BroAutoType, TrashComments
INDEXED_EXTRACTIONS = TSV
FIELD_HEADER_REGEX = ^#fields\t(.*)
FIELD_DELIMITER = \t
FIELD_QUOTE = \t
EVENT_BREAKER_ENABLE = true

# index-time operations to dynamically extract fields based on the log
# header and rename the sourcetype (bro_conn, bro_http, bro_smtp, etc).
[bro]
SHOULD_LINEMERGE = false
TRUNCATE = 0
MAX_TIMESTAMP_LOOKAHEAD = 20
TIME_FORMAT = %s.%6N
TRANSFORMS-BroAutoType = BroAutoType, TrashComments
INDEXED_EXTRACTIONS = TSV
FIELD_HEADER_REGEX = ^#fields\t(.*)
FIELD_DELIMITER = \t
FIELD_QUOTE = \t
EVENT_BREAKER_ENABLE = true

# search-time operations to enrich bro logs.
# Match all bro_* sourcetypes.
# This stanza is executing after of all source type based stanza but before the json (bro:*:json) pattern stanza.
# Stanza execution priority:
# 1) sourcetype based stanza ( bro_* or bro:*:json)
# 2) both data formate regex stanza [(?::){0}bro(_|:)*])
# 3) json sourcetype stanza ([(?::){0}bro:*:json])
[(?::){0}bro(_|:)*]
SHOULD_LINEMERGE = false
TRUNCATE = 0
EVENT_BREAKER_ENABLE = true
MAX_TIMESTAMP_LOOKAHEAD = 20
TIME_FORMAT = %s.%6N

#LOOKUP-LookupTCFlag    = LookupTCFlag TC OUTPUT flag
#LOOKUP-LookupAction    = bro_action_lookup status OUTPUT action
#LOOKUP-LookupConnState  = LookupConnState conn_state OUTPUT conn_state_meaning, action
#LOOKUP-LookupTransport = bro_protocol_lookup sourcetype OUTPUT transport
#LOOKUP-VendorInfo      = bro_vendor_info_lookup sourcetype OUTPUT vendor,product,product as vendor_product
#LOOKUP-NoticeType      = bro_note_alert_type note OUTPUT type

REPORT-bytes_from_bro = bytes_from_resp_size_int, bytes_from_file_size_int
REPORT-get_bytes_for_bro_conn   = bytes_in_int, bytes_out_int

EVAL-bytes    = if(isnum(bytes),bytes,bytes_in+bytes_out)
EVAL-duration = if(isnum(duration),duration,null())
EVAL-url = coalesce(query,uri)


###############
# CIM TAGGING #
###############
#FIELDALIAS-arg =
#FIELDALIAS-client_header_names
#FIELDALIAS-conn_state
FIELDALIAS-content_len = content_len AS message_size
#FIELDALIAS-date =
FIELDALIAS-dest = id_resp_h AS dest
FIELDALIAS-dest_ip = id_resp_h AS dest_ip
EVAL-dest_port = coalesce('id.resp_p',id_resp_p)
#FIELDALIAS-duration
EVAL-dvc = coalesce(extracted_host, host, hostname)
FIELDALIAS-emailAddress = emailAddress as sender
#FIELDALIAS-excerpt =
#FIELDALIAS-extraction_file =
FIELDALIAS-filename = filename AS file_name
#FIELDALIAS-file_size  =
#FIELDALIAS-first_received =
#FIELDALIAS-from =
#FIELDALIAS-helo =
#FIELDALIAS-history
EVAL-dest_host = coalesce(extracted_host, host, hostname)
#FIELDALIAS-info_code
#FIELDALIAS-info_msg
#FIELDALIAS-in_reply_to =
#FIELDALIAS-last_reply =
#FIELDALIAS-local_orig
FIELDALIAS-mailfrom = mailfrom AS src_user
#FIELDALIAS-md5 =
FIELDALIAS-method = method AS http_method
#FIELDALIAS-mime_desc =
#FIELDALIAS-mime_type =
FIELDALIAS-mime_type_attachment = mime_type AS attachment_type
FIELDALIAS-mime_type_http = mime_type AS http_content_type
#FIELDALIAS-missed_bytes
FIELDALIAS-msg_id = msg_id AS message_id
#FIELDALIAS-orig_bytes = orig_bytes AS bytes_out
#FIELDALIAS-orig_ip_bytes
FIELDALIAS-orig_pkts = orig_pkts AS packets_out
#FIELDALIAS-password =
#FIELDALIAS-path =
FIELDALIAS-proxied = proxied AS product
FIELDALIAS-qclass_name = qclass_name AS record_class
FIELDALIAS-qtype_name  = qtype_name  AS record_type
FIELDALIAS-rcptto = rcptto AS recipients
FIELDALIAS-referrer = referrer AS http_referrer
#FIELDALIAS-reply_code =
#FIELDALIAS-reply_msg =
#FIELDALIAS-reply_to =
FIELDALIAS-request_body_len = request_body_len AS bytes_out
#FIELDALIAS-resp_bytes = resp_bytes AS bytes_in
#FIELDALIAS-resp_ip_bytes
FIELDALIAS-response_body_len = response_body_len AS bytes_in
FIELDALIAS-resp_pkts = resp_pkts AS packets_in
#FIELDALIAS-second_received =
#FIELDALIAS-server_header_names
FIELDALIAS-service= service AS app
FIELDALIAS-src = id_orig_h AS src
FIELDALIAS-src_ip = id_orig_h AS src_ip
FIELDALIAS-src_port = id_orig_p AS src_port
FIELDALIAS-status_code = status_code AS status
#FIELDALIAS-status_msg
#FIELDALIAS-subject = subject AS message_subject
#FIELDALIAS-tags =
FIELDALIAS-TC  = TC AS flag
#FIELDALIAS-to =
#FIELDALIAS-trans_depth =
#FIELDALIAS-ts =
#FIELDALIAS-tunnel_parents
FIELDALIAS-uid = uid AS flow_id
#FIELDALIAS-user =
FIELDALIAS-user_agent = user_agent AS http_user_agent
FIELDALIAS-username = username as user
#FIELDALIAS-x_originating_ip =
FIELDALIAS-src_mac = mac AS src_mac
FIELDALIAS-lease_duration = lease_time AS lease_duration
EVAL-packets = packets_in + packets_out

# Alerts
FIELDALIAS-body_msg = msg AS body
FIELDALIAS-subject = note AS subject

EVAL-vendor_action = split(actions, ",")
EVAL-severity = if(isnotnull(body),"unknown", severity)

[bro_http]
EVAL-url = if(coalesce(extracted_host, host, hostname) == "-", null(), if(coalesce('id.resp_p', id_resp_p) == "-", if(uri == "-", coalesce(extracted_host, host, hostname), coalesce(extracted_host, host, hostname).uri), if(uri == "-", coalesce(extracted_host, host, hostname).":".coalesce('id.resp_p', id_resp_p), coalesce(extracted_host, host, hostname).":".coalesce('id.resp_p', id_resp_p).uri)))
EXTRACT-uri_query = \?(?<uri_query>.*) in uri
FIELDALIAS-uri_path = uri AS uri_path

[bro_smtp]
#LOOKUP-protocol_for_bro_smtp = bro_protocol_lookup sourcetype OUTPUT protocol
FIELDALIAS-orig_src = id_orig_h AS orig_src
FIELDALIAS-recipient = rcptto AS recipient
FIELDALIAS-return_addr = reply_to AS return_addr
FIELDALIAS-orig_recipient = id_resp_h AS orig_recipient

[bro_notice]
EVAL-action = split(actions, ",")
FIELDALIAS-dest = dst AS dest
FIELDALIAS-dvc = host AS dvc
EVAL-ids_type = "network"
FIELDALIAS-category = note AS category
FIELDALIAS-id = uid AS id

[bro_conn]
FIELDALIAS-tcp_flag = conn_state AS tcp_flag

[bro_dns]
FIELDALIAS-query_type = qtype_name AS query_type

#[bro_dhcp]
#LOOKUP-LookupTransport = bro_protocol_lookup sourcetype OUTPUT transport as signature

#[bro:dhcp:json]
#LOOKUP-LookupTransport = bro_protocol_lookup sourcetype OUTPUT transport as signature

[bro:conn:json]
FIELDALIAS-tunnel_parents = tunnel_parents{} AS tunnel_parents
FIELDALIAS-tcp_flag = conn_state AS tcp_flag

[bro:dns:json]
FIELDALIAS-answers = answers{} AS answers
FIELDALIAS-TTLs = TTLs{} AS TTLs
FIELDALIAS-query_type = qtype_name AS query_type
EVAL-answer = mvindex(answers, 0)

[bro:files:json]
FIELDALIAS-analyzers = analyzers{} AS analyzers
FIELDALIAS-conn_uids = conn_uids{} AS conn_uids
FIELDALIAS-rx_hosts = rx_hosts{} AS rx_hosts
FIELDALIAS-tx_hosts = tx_hosts{} AS tx_hosts

[bro:http:json]
FIELDALIAS-resp_fuids = resp_fuids{} AS resp_fuids
FIELDALIAS-mime_types = resp_mime_types{} AS resp_mime_types
FIELDALIAS-tags = tags{} AS tags
FIELDALIAS-orig_fuids = orig_fuids{} AS orig_fuids
FIELDALIAS-orig_mime_types = orig_mime_types{} AS orig_mime_types
EXTRACT-uri_query = \?(?<uri_query>.*) in uri
FIELDALIAS-uri_path = uri AS uri_path
EVAL-url = if(isnotnull(coalesce('id.resp_p',id_resp_p)),coalesce(extracted_host,spath(_raw,"host"), hostname).":".coalesce('id.resp_p',id_resp_p).uri, coalesce(extracted_host,spath(_raw,"host"), hostname).uri)

[bro:notice:json]
FIELDALIAS-action = actions{} AS action
FIELDALIAS-dest = dst AS dest
FIELDALIAS-dvc = host AS dvc
EVAL-ids_type = "network"
FIELDALIAS-category = note AS category
FIELDALIAS-actions = actions{} AS actions
FIELDALIAS-id = uid AS id


[bro:services:json]
FIELDALIAS-service = service{} AS service

[bro:ssl:json]
FIELDALIAS-cert_chain = cert_chain_fuids{} AS cert_chain_fuids
FIELDALIAS-client_cert_chain = client_cert_chain_fuids{} AS client_cert_chain_fuids

[bro:smtp:json]
#LOOKUP-protocol_for_bro_smtp = bro_protocol_lookup sourcetype OUTPUT protocol
FIELDALIAS-sender = from AS sender
FIELDALIAS-to = to{} AS to
FIELDALIAS-path = path{} AS path
FIELDALIAS-fuids = fuids{} AS fuids
FIELDALIAS-rcptto = rcptto{} AS rcptto
FIELDALIAS-orig_src = id.orig_h AS orig_src
FIELDALIAS-recipient = rcptto AS recipient
FIELDALIAS-return_addr = reply_to AS return_addr
FIELDALIAS-orig_recipient = id.resp_h AS orig_recipient

[bro_filter]
rename = bro_packet_filter

[bro_policy]
rename = bro_notice_policy

[bro_entities]
rename = bro_smtp_entities
