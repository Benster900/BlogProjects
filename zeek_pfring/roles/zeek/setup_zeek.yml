####################################################################
# Install sofrware
####################################################################
- name: Install dependencies for Zeek
  package:
    name: '{{ item }}'
    state: latest
  with_items:
    - cmake
    - make
    - gcc
    - g++
    - flex
    - bison
    - libpcap-dev
    - libssl-dev
    - python-dev
    - swig
    - zlib1g-dev

####################################################################
# Download Zeek source code
####################################################################
- name: Stat Zeek
  stat:
    path: '{{ zeek_base }}/bin/bro'
  register: zeek_compile

- name: Download Zeek source code
  git:
    repo: https://github.com/zeek/zeek
    recursive: true
    dest: '/tmp/zeek'
  when: zeek_compile.stat.exists == False

####################################################################
# Install/Setup GeoIP
#
# If you see an error message similar to “Bro was not configured for GeoIP support”,
# then you need to rebuild Bro and make sure it is linked against libmaxminddb. Normally,
# if libmaxminddb is installed correctly then it should automatically be found when
# building Bro. If this doesn’t happen, then you may need to specify the path to the
# libmaxminddb installation (e.g. ./configure --with-geoip=<path>).
#
# https://docs.zeek.org/en/stable/frameworks/geoip.html
####################################################################
- name: Stat GeoIP database
  stat:
    path: '/usr/share/GeoIP/GeoLite2-City.mmdb'
  register: geoip_db
  when: zeek_geoip == True

- name: Install libmaxminddb
  package:
    name: '{{ item }}'
    state: latest
  with_items:
    - libmaxminddb-dev
  when: zeek_geoip == True

- name: Download and extract GeoIP database
  unarchive:
    src: '{{ zeek_geoip_db_url }}'
    dest: '/usr/share/GeoIP/'
    remote_src: true
    extra_opts: [--strip-components=1]
  when: geoip_db.stat.exists == False and zeek_geoip == True

####################################################################
# Compile Zeek from source
####################################################################
- name: Debug msg
  debug:
    msg: 'WARNING - Compiling Zeek from source can take up to 30mins'
  when: zeek_compile.stat.exists == False

- name: Compile Zeek from source
  shell: '{{ item }}'
  args:
    chdir: '/tmp/zeek'
  with_items:
    - './configure --with-pcap={{ pf_ring_dir }} --prefix={{ zeek_base }}/'
    - 'make'
    - 'make install'
  when: zeek_compile.stat.exists == False

- name: Test GeoIP
  shell: './bro -e "print lookup_location(8.8.8.8);"'
  args:
    chdir: '{{ zeek_base }}/bin'
  when: zeek_geoip == True

####################################################################
# Create Zeek user and set perms
####################################################################
- name: Create Zeek user
  user:
    name: '{{ zeek_user }}'
    shell: /usr/sbin/nologin
    home: '{{ zeek_base }}'

- name: 'setcap cap_net_raw,cap_net_admin=eip {{ zeek_base }}/bin/bro'
  capabilities:
    path: '{{ zeek_base }}/bin/bro'
    capability: '{{ item }}'
    state: present
  with_items:
    - 'cap_net_raw+eip'
    - 'cap_net_admin+eip'

- name: Set Zeek base dir perms
  file:
    path: '{{ zeek_base }}'
    owner: '{{ zeek_user }}'
    group: '{{ zeek_user }}'
    recurse: true

- name: Add Zeek to system-wide $PATH
  copy:
    dest: /etc/profile.d/zeek-path.sh
    content: 'PATH=$PATH:{{ zeek_base }}/bin'

####################################################################
# Configure Zeek
####################################################################
- name: 'Copy Zeek configs'
  template:
    src: 'conf/zeek/{{ item }}'
    dest: '{{ zeek_base }}/etc/{{ item }}'
    owner: '{{ zeek_user }}'
    group: '{{ zeek_user }}'
  with_items:
    - 'networks.cfg'
    - 'node.cfg'

- name: Replace Zeek e-mail
  lineinfile:
    path: '{{ zeek_base }}/etc/broctl.cfg'
    regexp: '^MailTo ='
    line: 'MailTo = {{ zeek_mail_to }}'

- name: Enable Bro logging in JSON format
  lineinfile:
    path: '{{ zeek_base }}/share/bro/site/local.bro'
    line: '{{ item }}'
  with_items:
    - '# Enable Bro logging in JSON format'
    - 'redef LogAscii::json_timestamps = JSON::TS_ISO8601;'
    - 'redef LogAscii::use_json = T;'

- name: Create scripts directory for custom Zeek scripts
  file:
    path: '{{ zeek_base }}/share/bro/scripts'
    state: directory
    owner: '{{ zeek_user }}'
    group: '{{ zeek_user }}'

####################################################################
# Zeek scripts
####################################################################
- name: Enable Zeek file extraction
  lineinfile:
    path: '{{ zeek_base }}/share/bro/site/local.bro'
    line: '{{ item }}'
  with_items:
    - '# Zeek file extraction'
    - '@load policy/frameworks/files/extract-all-files.bro'
  when: zeek_file_extraction == True

- name: Enable Zeek stats
  lineinfile:
    path: '{{ zeek_base }}/share/bro/site/local.bro'
    line: '{{ item }}'
  with_items:
    - '# Zeek stats'
    - '@load policy/misc/stats.bro'
  when: zeek_stats == True

- name: Copy custom Zeek scripts
  template:
    src: "{{ item }}"
    dest: '{{ zeek_base }}/share/bro/scripts/{{ item | basename }}'
    owner: '{{ zeek_user }}'
    group: '{{ zeek_user }}'
  with_fileglob:
    - 'conf/zeek/scripts/*'
  when: zeek_custom_scripts == True

- name: Add commnet for custom scripts
  lineinfile:
    path: '{{ zeek_base }}/share/bro/site/local.bro'
    line: '# Zeek custom scripts'
  when: zeek_custom_scripts == True

- name: Enable Zeek file extraction
  lineinfile:
    path: '{{ zeek_base }}/share/bro/site/local.bro'
    line: '@load scripts/{{ item | basename }}'
  with_fileglob:
    - 'conf/zeek/scripts/*'
  when: zeek_custom_scripts == True

####################################################################
# Zeek deploy
####################################################################
- name: Run Bro deploy
  shell: '{{ zeek_base }}/bin/broctl {{ item }}'
  become: true
  become_user: '{{ zeek_user }}'
  with_items:
    - 'install'
    - 'deploy'
    - 'status'
